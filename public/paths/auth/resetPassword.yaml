post:
  servers: 
    - url: 'http://localhost:4000/v1'
    - url: 'https://api.gracehopper.xyz/v1'
  tags:
    - Auth
  summary: Reset Password
  description: Allows the user to recover his password
  operationId: reset-passwd
  security: []
  parameters:
    - in: path
      name: id
      schema:
        type: string
      required: true
      description: Unique identifier of a user.
    - in: path
      name: token
      schema:
        type: string
      required: true
      description: Unique token to validate the session.
  requestBody:
    content:
      application/json:
        schema:
          type: object
          required:
            - password
          properties: 
            password: 
              type: string
              format: password
              example: qwerty
              description: New password
  responses:
    200:
      description: Successful
      $ref: '../../components/schemas/responses/200.yaml'
    400:
      description: Bad Request
      $ref: '../../components/schemas/responses/400.yaml'
    401:
      description: Unauthorized
      $ref: '../../components/schemas/responses/401.yaml'
    404:
      description: Not Found
      $ref: '../../components/schemas/responses/404.yaml'
    429:
      description: User already exists
      $ref: '../../components/schemas/responses/429.yaml'
    500:
      description: Internal server error
      $ref: '../../components/schemas/responses/500.yaml'
  x-codeSamples:
    - lang: cURL
      source: ""
      
get:
  servers: 
    - url: 'http://localhost:4000/v1'
    - url: 'https://api.gracehopper.xyz/v1'
  tags:
    - Auth
  summary: Check Reset Uri
  description: Check if the link is valid and still allows to change the password
  operationId: post-forgot-passwd
  security: []
  parameters:
    - in: path
      name: id
      schema:
        type: string
      required: true
      description: Unique identifier of a user.
    - in: path
      name: token
      schema:
        type: string
      required: true
      description: Unique token to validate the session.
  responses:
    200: 
      description: Successful
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id: 
                    type: string
                    description: Unique identifier of a user.
                  email:
                    type: string
                    format: email
                    description: Email address of a user.
                  iat:
                    type: integer
                    description: Time when the token was created.
                  exp:
                    type: integer
                    description: Identifies the timestamp after which the JWT does not have to be accepted.
                  
              status:
                $ref: "../../components/schemas/status.yaml"
          examples:
            example:
              summary: ""
              value:
                data:
                  id: 6427012084270ee46cd8300c
                  email: "johndoe@example.com"
                  iat: 1679661673
                  exp: 1679662573
                status:
                  timestamp: 2023-03-30T17:24:17.230Z
                  error_code: 0
                  error_message: "Successful"
                  elapsed: 0
    404:
      description: Not Found
      $ref: '../../components/schemas/responses/404.yaml'
    429:
      description: Too Many Request
      $ref: '../../components/schemas/responses/429.yaml'
    500:
      description: Internal Server Error
      $ref: '../../components/schemas/responses/500.yaml'
  x-codeSamples:
    - lang: cURL
      source: ""

name: Production CI

on:
  push:
    branches: [main]
  pull_request: 
    branches: [main]

env:
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  MONGO_URI: ${{ secrets.MONGO_URI }}
  REDIS_URI: ${{ secrets.REDIS_URI }}
  IMAGE_NAME: ${{ github.repository }}
  STOCKFISH_PATH: stockfish
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # install:
  #   name: install ðŸ“¦
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   - uses: actions/setup-node@v3
  #     with:
  #       cache: npm
  #       node-version: 16
  #   - name: Install Dependencies
  #     run: npm ci

  # lint:
  #   name: lint ðŸª…
  #   needs: install
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   - uses: actions/setup-node@v3
  #     with:
  #       cache: npm
  #       node-version: 16
  #   - name: Install Dependencies
  #     run: npm ci
  #   - name: Lint
  #     run: npm run lint

  # test:
  #   name: test ðŸ§ª
  #   needs: [install, lint]
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   - uses: actions/setup-node@v3
  #     with:
  #       cache: npm
  #       node-version: 16
  #   - name: Install Dependencies
  #     run: npm ci
  #   - name: Certificates
  #     env:
  #       CERT: ${{ secrets.CERT }}
  #       KEY: ${{ secrets.KEY }}
  #     run: |
  #       mkdir -p nginx/api.gracehopper.xyz && echo "$CERT" | base64 -d > nginx/api.gracehopper.xyz/cert.pem
  #       mkdir -p nginx/api.gracehopper.xyz && echo "$KEY" | base64 -d > nginx/api.gracehopper.xyz/privkey.pem
  #   - name: Test
  #     env:
  #       NODE_ENV: test
  #       NO_AI: true
  #     run: npm run test

  deploy:
    name: deploy ðŸ§ª
    # needs: [test]
    runs-on: ubuntu-22.04
    # permissions:
    #   contents: read
    #   packages: write

    # steps:
    #   - name: Checkout repository
    #     uses: actions/checkout@v3

    #   - name: Log in to the Container registry
    #     uses: docker/login-action@v2
    #     with:
    #       registry: ${{ env.REGISTRY }}
    #       username: ${{ github.actor }}
    #       password: ${{ secrets.GHCR_TOKEN }}

    #   - name: Extract metadata (tags, labels) for Docker
    #     id: meta
    #     uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
    #     with:
    #       images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    #       tags: |
    #         type=ref,event=branch
    #         type=sha

    #   - name: Build and push Docker image
    #     uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
    #     with:
    #       context: .
    #       push: true
    #       tags: ${{ steps.meta.outputs.tags }}
    #       labels: ${{ steps.meta.outputs.labels }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
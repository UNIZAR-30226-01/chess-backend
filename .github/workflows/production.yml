name: Production CI

on:
  push:
    branches: [main]
  pull_request: 
    branches: [main]

env:
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  MONGO_URI: ${{ secrets.MONGO_URI }}
  REDIS_URI: ${{ secrets.REDIS_URI }}
  IMAGE_NAME: ${{ github.repository }}
  STOCKFISH_PATH: stockfish
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  install:
    name: install ðŸ“¦
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v3
      with:
        cache: npm
        node-version: 16
    - name: Install Dependencies
      run: npm ci
    - name: Generate Build
      run: npm run tsc
    - name: Create Archive
      run: |
        zip -r build.zip .
    - name: Publish Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: build.zip
        if-no-files-found: error

  # lint:
  #   name: lint ðŸª…
  #   needs: install
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   - uses: actions/setup-node@v3
  #     with:
  #       cache: npm
  #       node-version: 16
  #   - name: Install Dependencies
  #     run: npm ci
  #   - name: Lint
  #     run: npm run lint

  # test:
  #   name: test ðŸ§ª
  #   needs: [install, lint]
  #   runs-on: ubuntu-22.04
  #   steps:
  #   - uses: actions/checkout@v3
  #     with:
  #       fetch-depth: 0
  #   - uses: actions/setup-node@v3
  #     with:
  #       cache: npm
  #       node-version: 16
  #   - name: Install Dependencies
  #     run: npm ci
  #   - name: Certificates
  #     env:
  #       CERT: ${{ secrets.CERT }}
  #       KEY: ${{ secrets.KEY }}
  #     run: |
  #       mkdir -p nginx/api.gracehopper.xyz && echo "$CERT" | base64 -d > nginx/api.gracehopper.xyz/cert.pem
  #       mkdir -p nginx/api.gracehopper.xyz && echo "$KEY" | base64 -d > nginx/api.gracehopper.xyz/privkey.pem
  #   - name: Test
  #     env:
  #       NODE_ENV: test
  #       NO_AI: true
  #     run: npm run test

  deploy:
    name: deploy ðŸ§ª
    # needs: [test]
    needs: [install]
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Extract Archive
        run: |
          unzip build.zip -d build

      - name: Download Build Artifact
        run: | 
          ls -la

      - name: Generate Docker Metadata and Push Tags to GitHub
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
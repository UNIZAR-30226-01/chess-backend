# Configuraci칩n general de NGINX
upstream expresshttp {
  server express:4000;
}

upstream expressws {
  server express:4001;
}

# Bloque de servidor para redirigir todas las solicitudes HTTP a HTTPS
server {
  listen 443 ssl http2;
  server_name api.gracehopper.xyz;

  ssl_stapling on;
  ssl_stapling_file /etc/nginx/fullchain.pem;
  ssl_trusted_certificate /etc/nginx/chain.pem;
  ssl_certificate /etc/nginx/cert.pem;
  ssl_certificate_key /etc/nginx/privkey.pem;

  location / {
    return 301 https://docs.gracehopper.xyz;
  }

  # Manejar todas las dem치s solicitudes
  location /api/v1 {
    proxy_pass http://expresshttp;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Origin $http_origin; 

    # Configuraci칩n para soportar WebSockets
    proxy_http_version 1.1, 2.0;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}

server {
  listen 8443 ssl;
  server_name api.gracehopper.xyz;

  ssl_stapling on;
  ssl_stapling_file /etc/nginx/fullchain.pem;
  ssl_trusted_certificate /etc/nginx/chain.pem;
  ssl_certificate /etc/nginx/cert.pem;
  ssl_certificate_key /etc/nginx/privkey.pem;

  proxy_set_header Host $host;
  proxy_set_header X-Real-IP $remote_addr;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  # Configuraci칩n para soportar WebSockets
  proxy_http_version 1.1, 2.0;
  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection "upgrade";

  location / {
    proxy_pass http://expressws;
  }
}
